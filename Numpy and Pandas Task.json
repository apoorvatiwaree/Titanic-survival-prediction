{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  iso_code continent     location        date  total_cases  new_cases  \\\n",
      "0      AFG      Asia  Afghanistan  2020-02-24          1.0        1.0   \n",
      "1      AFG      Asia  Afghanistan  2020-02-25          1.0        0.0   \n",
      "2      AFG      Asia  Afghanistan  2020-02-26          1.0        0.0   \n",
      "3      AFG      Asia  Afghanistan  2020-02-27          1.0        0.0   \n",
      "4      AFG      Asia  Afghanistan  2020-02-28          1.0        0.0   \n",
      "\n",
      "   new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  ...  \\\n",
      "0                 NaN           NaN         NaN                  NaN  ...   \n",
      "1                 NaN           NaN         NaN                  NaN  ...   \n",
      "2                 NaN           NaN         NaN                  NaN  ...   \n",
      "3                 NaN           NaN         NaN                  NaN  ...   \n",
      "4                 NaN           NaN         NaN                  NaN  ...   \n",
      "\n",
      "   gdp_per_capita  extreme_poverty  cardiovasc_death_rate  \\\n",
      "0        1803.987              NaN                597.029   \n",
      "1        1803.987              NaN                597.029   \n",
      "2        1803.987              NaN                597.029   \n",
      "3        1803.987              NaN                597.029   \n",
      "4        1803.987              NaN                597.029   \n",
      "\n",
      "   diabetes_prevalence  female_smokers  male_smokers  handwashing_facilities  \\\n",
      "0                 9.59             NaN           NaN                  37.746   \n",
      "1                 9.59             NaN           NaN                  37.746   \n",
      "2                 9.59             NaN           NaN                  37.746   \n",
      "3                 9.59             NaN           NaN                  37.746   \n",
      "4                 9.59             NaN           NaN                  37.746   \n",
      "\n",
      "   hospital_beds_per_thousand  life_expectancy  human_development_index  \n",
      "0                         0.5            64.83                    0.498  \n",
      "1                         0.5            64.83                    0.498  \n",
      "2                         0.5            64.83                    0.498  \n",
      "3                         0.5            64.83                    0.498  \n",
      "4                         0.5            64.83                    0.498  \n",
      "\n",
      "[5 rows x 55 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "data=pd.read_csv(\"owid-covid-data.csv\")\n",
    "print(data.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<bound method NDFrame.tail of       iso_code continent     location        date  total_cases  new_cases  \\\n",
      "0          AFG      Asia  Afghanistan  2020-02-24          1.0        1.0   \n",
      "1          AFG      Asia  Afghanistan  2020-02-25          1.0        0.0   \n",
      "2          AFG      Asia  Afghanistan  2020-02-26          1.0        0.0   \n",
      "3          AFG      Asia  Afghanistan  2020-02-27          1.0        0.0   \n",
      "4          AFG      Asia  Afghanistan  2020-02-28          1.0        0.0   \n",
      "...        ...       ...          ...         ...          ...        ...   \n",
      "61850      ZWE    Africa     Zimbabwe  2021-01-19      28675.0      783.0   \n",
      "61851      ZWE    Africa     Zimbabwe  2021-01-20      29408.0      733.0   \n",
      "61852      ZWE    Africa     Zimbabwe  2021-01-21      30047.0      639.0   \n",
      "61853      ZWE    Africa     Zimbabwe  2021-01-22      30523.0      476.0   \n",
      "61854      ZWE    Africa     Zimbabwe  2021-01-23      31007.0      484.0   \n",
      "\n",
      "       new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  ...  \\\n",
      "0                     NaN           NaN         NaN                  NaN  ...   \n",
      "1                     NaN           NaN         NaN                  NaN  ...   \n",
      "2                     NaN           NaN         NaN                  NaN  ...   \n",
      "3                     NaN           NaN         NaN                  NaN  ...   \n",
      "4                     NaN           NaN         NaN                  NaN  ...   \n",
      "...                   ...           ...         ...                  ...  ...   \n",
      "61850             776.571         825.0        52.0               39.143  ...   \n",
      "61851             736.000         879.0        54.0               41.429  ...   \n",
      "61852             668.429         917.0        38.0               40.143  ...   \n",
      "61853             630.571         962.0        45.0               42.286  ...   \n",
      "61854             589.429         974.0        12.0               41.571  ...   \n",
      "\n",
      "       gdp_per_capita  extreme_poverty  cardiovasc_death_rate  \\\n",
      "0            1803.987              NaN                597.029   \n",
      "1            1803.987              NaN                597.029   \n",
      "2            1803.987              NaN                597.029   \n",
      "3            1803.987              NaN                597.029   \n",
      "4            1803.987              NaN                597.029   \n",
      "...               ...              ...                    ...   \n",
      "61850        1899.775             21.4                307.846   \n",
      "61851        1899.775             21.4                307.846   \n",
      "61852        1899.775             21.4                307.846   \n",
      "61853        1899.775             21.4                307.846   \n",
      "61854        1899.775             21.4                307.846   \n",
      "\n",
      "       diabetes_prevalence  female_smokers  male_smokers  \\\n",
      "0                     9.59             NaN           NaN   \n",
      "1                     9.59             NaN           NaN   \n",
      "2                     9.59             NaN           NaN   \n",
      "3                     9.59             NaN           NaN   \n",
      "4                     9.59             NaN           NaN   \n",
      "...                    ...             ...           ...   \n",
      "61850                 1.82             1.6          30.7   \n",
      "61851                 1.82             1.6          30.7   \n",
      "61852                 1.82             1.6          30.7   \n",
      "61853                 1.82             1.6          30.7   \n",
      "61854                 1.82             1.6          30.7   \n",
      "\n",
      "       handwashing_facilities  hospital_beds_per_thousand  life_expectancy  \\\n",
      "0                      37.746                         0.5            64.83   \n",
      "1                      37.746                         0.5            64.83   \n",
      "2                      37.746                         0.5            64.83   \n",
      "3                      37.746                         0.5            64.83   \n",
      "4                      37.746                         0.5            64.83   \n",
      "...                       ...                         ...              ...   \n",
      "61850                  36.791                         1.7            61.49   \n",
      "61851                  36.791                         1.7            61.49   \n",
      "61852                  36.791                         1.7            61.49   \n",
      "61853                  36.791                         1.7            61.49   \n",
      "61854                  36.791                         1.7            61.49   \n",
      "\n",
      "       human_development_index  \n",
      "0                        0.498  \n",
      "1                        0.498  \n",
      "2                        0.498  \n",
      "3                        0.498  \n",
      "4                        0.498  \n",
      "...                        ...  \n",
      "61850                    0.535  \n",
      "61851                    0.535  \n",
      "61852                    0.535  \n",
      "61853                    0.535  \n",
      "61854                    0.535  \n",
      "\n",
      "[61855 rows x 55 columns]>\n"
     ]
    }
   ],
   "source": [
    "print(data.tail)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 61855 entries, 0 to 61854\n",
      "Data columns (total 55 columns):\n",
      " #   Column                                 Non-Null Count  Dtype  \n",
      "---  ------                                 --------------  -----  \n",
      " 0   iso_code                               61503 non-null  object \n",
      " 1   continent                              61135 non-null  object \n",
      " 2   location                               61855 non-null  object \n",
      " 3   date                                   61855 non-null  object \n",
      " 4   total_cases                            61258 non-null  float64\n",
      " 5   new_cases                              61251 non-null  float64\n",
      " 6   new_cases_smoothed                     60293 non-null  float64\n",
      " 7   total_deaths                           52732 non-null  float64\n",
      " 8   new_deaths                             52731 non-null  float64\n",
      " 9   new_deaths_smoothed                    60293 non-null  float64\n",
      " 10  total_cases_per_million                60906 non-null  float64\n",
      " 11  new_cases_per_million                  60899 non-null  float64\n",
      " 12  new_cases_smoothed_per_million         59946 non-null  float64\n",
      " 13  total_deaths_per_million               52393 non-null  float64\n",
      " 14  new_deaths_per_million                 52392 non-null  float64\n",
      " 15  new_deaths_smoothed_per_million        59946 non-null  float64\n",
      " 16  reproduction_rate                      48756 non-null  float64\n",
      " 17  icu_patients                           6856 non-null   float64\n",
      " 18  icu_patients_per_million               6856 non-null   float64\n",
      " 19  hosp_patients                          8114 non-null   float64\n",
      " 20  hosp_patients_per_million              8114 non-null   float64\n",
      " 21  weekly_icu_admissions                  672 non-null    float64\n",
      " 22  weekly_icu_admissions_per_million      672 non-null    float64\n",
      " 23  weekly_hosp_admissions                 991 non-null    float64\n",
      " 24  weekly_hosp_admissions_per_million     991 non-null    float64\n",
      " 25  total_tests                            28493 non-null  float64\n",
      " 26  new_tests                              28673 non-null  float64\n",
      " 27  total_tests_per_thousand               28493 non-null  float64\n",
      " 28  new_tests_per_thousand                 28673 non-null  float64\n",
      " 29  new_tests_smoothed                     32285 non-null  float64\n",
      " 30  new_tests_smoothed_per_thousand        32285 non-null  float64\n",
      " 31  positive_rate                          30469 non-null  float64\n",
      " 32  tests_per_case                         29988 non-null  float64\n",
      " 33  tests_units                            33478 non-null  object \n",
      " 34  total_vaccinations                     872 non-null    float64\n",
      " 35  new_vaccinations                       675 non-null    float64\n",
      " 36  new_vaccinations_smoothed              1160 non-null   float64\n",
      " 37  total_vaccinations_per_hundred         872 non-null    float64\n",
      " 38  new_vaccinations_smoothed_per_million  1160 non-null   float64\n",
      " 39  stringency_index                       55244 non-null  float64\n",
      " 40  population                             61503 non-null  float64\n",
      " 41  population_density                     60203 non-null  float64\n",
      " 42  median_age                             58846 non-null  float64\n",
      " 43  aged_65_older                          58164 non-null  float64\n",
      " 44  aged_70_older                          58513 non-null  float64\n",
      " 45  gdp_per_capita                         58881 non-null  float64\n",
      " 46  extreme_poverty                        40292 non-null  float64\n",
      " 47  cardiovasc_death_rate                  59480 non-null  float64\n",
      " 48  diabetes_prevalence                    60181 non-null  float64\n",
      " 49  female_smokers                         46941 non-null  float64\n",
      " 50  male_smokers                           46298 non-null  float64\n",
      " 51  handwashing_facilities                 29791 non-null  float64\n",
      " 52  hospital_beds_per_thousand             54631 non-null  float64\n",
      " 53  life_expectancy                        61187 non-null  float64\n",
      " 54  human_development_index                59145 non-null  float64\n",
      "dtypes: float64(50), object(5)\n",
      "memory usage: 26.0+ MB\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "print(data.info())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "iso_code                                  object\n",
       "continent                                 object\n",
       "location                                  object\n",
       "date                                      object\n",
       "total_cases                              float64\n",
       "new_cases                                float64\n",
       "new_cases_smoothed                       float64\n",
       "total_deaths                             float64\n",
       "new_deaths                               float64\n",
       "new_deaths_smoothed                      float64\n",
       "total_cases_per_million                  float64\n",
       "new_cases_per_million                    float64\n",
       "new_cases_smoothed_per_million           float64\n",
       "total_deaths_per_million                 float64\n",
       "new_deaths_per_million                   float64\n",
       "new_deaths_smoothed_per_million          float64\n",
       "reproduction_rate                        float64\n",
       "icu_patients                             float64\n",
       "icu_patients_per_million                 float64\n",
       "hosp_patients                            float64\n",
       "hosp_patients_per_million                float64\n",
       "weekly_icu_admissions                    float64\n",
       "weekly_icu_admissions_per_million        float64\n",
       "weekly_hosp_admissions                   float64\n",
       "weekly_hosp_admissions_per_million       float64\n",
       "total_tests                              float64\n",
       "new_tests                                float64\n",
       "total_tests_per_thousand                 float64\n",
       "new_tests_per_thousand                   float64\n",
       "new_tests_smoothed                       float64\n",
       "new_tests_smoothed_per_thousand          float64\n",
       "positive_rate                            float64\n",
       "tests_per_case                           float64\n",
       "tests_units                               object\n",
       "total_vaccinations                       float64\n",
       "new_vaccinations                         float64\n",
       "new_vaccinations_smoothed                float64\n",
       "total_vaccinations_per_hundred           float64\n",
       "new_vaccinations_smoothed_per_million    float64\n",
       "stringency_index                         float64\n",
       "population                               float64\n",
       "population_density                       float64\n",
       "median_age                               float64\n",
       "aged_65_older                            float64\n",
       "aged_70_older                            float64\n",
       "gdp_per_capita                           float64\n",
       "extreme_poverty                          float64\n",
       "cardiovasc_death_rate                    float64\n",
       "diabetes_prevalence                      float64\n",
       "female_smokers                           float64\n",
       "male_smokers                             float64\n",
       "handwashing_facilities                   float64\n",
       "hospital_beds_per_thousand               float64\n",
       "life_expectancy                          float64\n",
       "human_development_index                  float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>total_cases</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_smoothed</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>new_deaths</th>\n",
       "      <th>new_deaths_smoothed</th>\n",
       "      <th>total_cases_per_million</th>\n",
       "      <th>new_cases_per_million</th>\n",
       "      <th>new_cases_smoothed_per_million</th>\n",
       "      <th>total_deaths_per_million</th>\n",
       "      <th>...</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>extreme_poverty</th>\n",
       "      <th>cardiovasc_death_rate</th>\n",
       "      <th>diabetes_prevalence</th>\n",
       "      <th>female_smokers</th>\n",
       "      <th>male_smokers</th>\n",
       "      <th>handwashing_facilities</th>\n",
       "      <th>hospital_beds_per_thousand</th>\n",
       "      <th>life_expectancy</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6.125800e+04</td>\n",
       "      <td>61251.000000</td>\n",
       "      <td>60293.000000</td>\n",
       "      <td>5.273200e+04</td>\n",
       "      <td>52731.000000</td>\n",
       "      <td>60293.000000</td>\n",
       "      <td>60906.000000</td>\n",
       "      <td>60899.000000</td>\n",
       "      <td>59946.000000</td>\n",
       "      <td>52393.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>58881.000000</td>\n",
       "      <td>40292.000000</td>\n",
       "      <td>59480.000000</td>\n",
       "      <td>60181.000000</td>\n",
       "      <td>46941.000000</td>\n",
       "      <td>46298.000000</td>\n",
       "      <td>29791.000000</td>\n",
       "      <td>54631.000000</td>\n",
       "      <td>61187.000000</td>\n",
       "      <td>59145.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3.180225e+05</td>\n",
       "      <td>3197.351390</td>\n",
       "      <td>3185.878712</td>\n",
       "      <td>1.018411e+04</td>\n",
       "      <td>80.429387</td>\n",
       "      <td>68.815547</td>\n",
       "      <td>5511.034269</td>\n",
       "      <td>59.711675</td>\n",
       "      <td>59.393199</td>\n",
       "      <td>136.747101</td>\n",
       "      <td>...</td>\n",
       "      <td>19178.365492</td>\n",
       "      <td>13.178579</td>\n",
       "      <td>256.323987</td>\n",
       "      <td>7.769830</td>\n",
       "      <td>10.574835</td>\n",
       "      <td>32.637653</td>\n",
       "      <td>51.116775</td>\n",
       "      <td>3.041410</td>\n",
       "      <td>73.138461</td>\n",
       "      <td>0.715686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.129735e+06</td>\n",
       "      <td>28415.970931</td>\n",
       "      <td>28023.892642</td>\n",
       "      <td>8.153858e+04</td>\n",
       "      <td>599.746802</td>\n",
       "      <td>535.866583</td>\n",
       "      <td>11194.696646</td>\n",
       "      <td>165.576240</td>\n",
       "      <td>137.105184</td>\n",
       "      <td>253.257953</td>\n",
       "      <td>...</td>\n",
       "      <td>19666.690418</td>\n",
       "      <td>19.884329</td>\n",
       "      <td>118.117119</td>\n",
       "      <td>3.894355</td>\n",
       "      <td>10.414282</td>\n",
       "      <td>13.453073</td>\n",
       "      <td>31.773644</td>\n",
       "      <td>2.471216</td>\n",
       "      <td>7.549425</td>\n",
       "      <td>0.153774</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-46076.000000</td>\n",
       "      <td>-1121.714000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-1918.000000</td>\n",
       "      <td>-232.143000</td>\n",
       "      <td>0.001000</td>\n",
       "      <td>-2153.437000</td>\n",
       "      <td>-276.825000</td>\n",
       "      <td>0.001000</td>\n",
       "      <td>...</td>\n",
       "      <td>661.240000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>79.370000</td>\n",
       "      <td>0.990000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>7.700000</td>\n",
       "      <td>1.188000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>53.280000</td>\n",
       "      <td>0.354000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>5.090000e+02</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.429000</td>\n",
       "      <td>2.800000e+01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>105.722000</td>\n",
       "      <td>0.068500</td>\n",
       "      <td>0.819000</td>\n",
       "      <td>4.763000</td>\n",
       "      <td>...</td>\n",
       "      <td>4541.795000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>164.905000</td>\n",
       "      <td>5.290000</td>\n",
       "      <td>1.900000</td>\n",
       "      <td>21.600000</td>\n",
       "      <td>20.859000</td>\n",
       "      <td>1.300000</td>\n",
       "      <td>67.440000</td>\n",
       "      <td>0.590000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.289000e+03</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>52.714000</td>\n",
       "      <td>1.630000e+02</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.714000</td>\n",
       "      <td>820.157500</td>\n",
       "      <td>4.896000</td>\n",
       "      <td>6.580000</td>\n",
       "      <td>24.359000</td>\n",
       "      <td>...</td>\n",
       "      <td>13111.214000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>241.219000</td>\n",
       "      <td>7.110000</td>\n",
       "      <td>6.300000</td>\n",
       "      <td>31.400000</td>\n",
       "      <td>49.839000</td>\n",
       "      <td>2.400000</td>\n",
       "      <td>74.620000</td>\n",
       "      <td>0.747000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5.392725e+04</td>\n",
       "      <td>491.000000</td>\n",
       "      <td>522.571000</td>\n",
       "      <td>1.478000e+03</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>8.571000</td>\n",
       "      <td>5122.099750</td>\n",
       "      <td>44.595000</td>\n",
       "      <td>49.603250</td>\n",
       "      <td>126.988000</td>\n",
       "      <td>...</td>\n",
       "      <td>27216.445000</td>\n",
       "      <td>21.200000</td>\n",
       "      <td>325.721000</td>\n",
       "      <td>10.080000</td>\n",
       "      <td>19.300000</td>\n",
       "      <td>41.100000</td>\n",
       "      <td>83.241000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>78.570000</td>\n",
       "      <td>0.843000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9.874427e+07</td>\n",
       "      <td>856352.000000</td>\n",
       "      <td>738108.429000</td>\n",
       "      <td>2.120578e+06</td>\n",
       "      <td>17817.000000</td>\n",
       "      <td>14064.714000</td>\n",
       "      <td>122940.529000</td>\n",
       "      <td>8652.658000</td>\n",
       "      <td>2648.773000</td>\n",
       "      <td>1915.257000</td>\n",
       "      <td>...</td>\n",
       "      <td>116935.600000</td>\n",
       "      <td>77.600000</td>\n",
       "      <td>724.417000</td>\n",
       "      <td>30.530000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>78.100000</td>\n",
       "      <td>98.999000</td>\n",
       "      <td>13.800000</td>\n",
       "      <td>86.750000</td>\n",
       "      <td>0.953000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 50 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        total_cases      new_cases  new_cases_smoothed  total_deaths  \\\n",
       "count  6.125800e+04   61251.000000        60293.000000  5.273200e+04   \n",
       "mean   3.180225e+05    3197.351390         3185.878712  1.018411e+04   \n",
       "std    3.129735e+06   28415.970931        28023.892642  8.153858e+04   \n",
       "min    1.000000e+00  -46076.000000        -1121.714000  1.000000e+00   \n",
       "25%    5.090000e+02       1.000000            4.429000  2.800000e+01   \n",
       "50%    5.289000e+03      43.000000           52.714000  1.630000e+02   \n",
       "75%    5.392725e+04     491.000000          522.571000  1.478000e+03   \n",
       "max    9.874427e+07  856352.000000       738108.429000  2.120578e+06   \n",
       "\n",
       "         new_deaths  new_deaths_smoothed  total_cases_per_million  \\\n",
       "count  52731.000000         60293.000000             60906.000000   \n",
       "mean      80.429387            68.815547              5511.034269   \n",
       "std      599.746802           535.866583             11194.696646   \n",
       "min    -1918.000000          -232.143000                 0.001000   \n",
       "25%        0.000000             0.000000               105.722000   \n",
       "50%        1.000000             0.714000               820.157500   \n",
       "75%       11.000000             8.571000              5122.099750   \n",
       "max    17817.000000         14064.714000            122940.529000   \n",
       "\n",
       "       new_cases_per_million  new_cases_smoothed_per_million  \\\n",
       "count           60899.000000                    59946.000000   \n",
       "mean               59.711675                       59.393199   \n",
       "std               165.576240                      137.105184   \n",
       "min             -2153.437000                     -276.825000   \n",
       "25%                 0.068500                        0.819000   \n",
       "50%                 4.896000                        6.580000   \n",
       "75%                44.595000                       49.603250   \n",
       "max              8652.658000                     2648.773000   \n",
       "\n",
       "       total_deaths_per_million  ...  gdp_per_capita  extreme_poverty  \\\n",
       "count              52393.000000  ...    58881.000000     40292.000000   \n",
       "mean                 136.747101  ...    19178.365492        13.178579   \n",
       "std                  253.257953  ...    19666.690418        19.884329   \n",
       "min                    0.001000  ...      661.240000         0.100000   \n",
       "25%                    4.763000  ...     4541.795000         0.500000   \n",
       "50%                   24.359000  ...    13111.214000         2.000000   \n",
       "75%                  126.988000  ...    27216.445000        21.200000   \n",
       "max                 1915.257000  ...   116935.600000        77.600000   \n",
       "\n",
       "       cardiovasc_death_rate  diabetes_prevalence  female_smokers  \\\n",
       "count           59480.000000         60181.000000    46941.000000   \n",
       "mean              256.323987             7.769830       10.574835   \n",
       "std               118.117119             3.894355       10.414282   \n",
       "min                79.370000             0.990000        0.100000   \n",
       "25%               164.905000             5.290000        1.900000   \n",
       "50%               241.219000             7.110000        6.300000   \n",
       "75%               325.721000            10.080000       19.300000   \n",
       "max               724.417000            30.530000       44.000000   \n",
       "\n",
       "       male_smokers  handwashing_facilities  hospital_beds_per_thousand  \\\n",
       "count  46298.000000            29791.000000                54631.000000   \n",
       "mean      32.637653               51.116775                    3.041410   \n",
       "std       13.453073               31.773644                    2.471216   \n",
       "min        7.700000                1.188000                    0.100000   \n",
       "25%       21.600000               20.859000                    1.300000   \n",
       "50%       31.400000               49.839000                    2.400000   \n",
       "75%       41.100000               83.241000                    4.000000   \n",
       "max       78.100000               98.999000                   13.800000   \n",
       "\n",
       "       life_expectancy  human_development_index  \n",
       "count     61187.000000             59145.000000  \n",
       "mean         73.138461                 0.715686  \n",
       "std           7.549425                 0.153774  \n",
       "min          53.280000                 0.354000  \n",
       "25%          67.440000                 0.590000  \n",
       "50%          74.620000                 0.747000  \n",
       "75%          78.570000                 0.843000  \n",
       "max          86.750000                 0.953000  \n",
       "\n",
       "[8 rows x 50 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "193\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\"Data of how many countries is present\"\"\"\n",
    "print(len(pd.unique(data['location'])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7\n"
     ]
    }
   ],
   "source": [
    "\"\"\"Number of continents\"\"\"\n",
    "print(len(pd.unique(data['continent'])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "360\n"
     ]
    }
   ],
   "source": [
    "\"\"\"How many rows belong to India\"\"\"\n",
    "print(len(data[data['location']=='India']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2020-01-01  to  2021-01-23\n"
     ]
    }
   ],
   "source": [
    "\"\"\"Window of dates\"\"\"\n",
    "print(min(data['date']),\" to \",max(data['date']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'Series' object has no attribute 'info'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-26-e9b4450510ef>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      8\u001b[0m \u001b[0mtotal_cases\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'total_cases'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[0mtotal\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mtotal_cases\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtail\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 10\u001b[1;33m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtotal_cases\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0minfo\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[1;34m(self, name)\u001b[0m\n\u001b[0;32m   5272\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_info_axis\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_can_hold_identifiers_and_holds_name\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5273\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 5274\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   5275\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5276\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m->\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mAttributeError\u001b[0m: 'Series' object has no attribute 'info'"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "Extract Data of only India and make into a new dataframe.\n",
    "Extract only the total cases column.\n",
    "Convert total cases column into percentage. Percentage of total cases. Total cases is the number of cases as on the last date of the dataset.\n",
    "\"\"\"\n",
    "\n",
    "india_data=data[data['location']=='India']\n",
    "total_cases=data['total_cases']\n",
    "total=total_cases.tail(1)\n",
    "print(total_cases.info())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
